---
- name: Install Docker dependencies
  ansible.builtin.package:
    name:
      - ca-certificates
      - curl
      - gnupg
      - lsb-release
    state: latest

- name: Add Docker APT repository
  ansible.builtin.deb822_repository:
    name: docker
    types: deb
    uris: "https://download.docker.com/linux/debian"
    suites: trixie
    components: stable
    signed_by: "https://download.docker.com/linux/debian/gpg"
    state: present
  notify: Update APT cache

- name: Install Docker Engine and tools
  ansible.builtin.package:
    name:
      - docker-ce
      - docker-ce-cli
      - containerd.io
      - docker-buildx-plugin
      - docker-compose-plugin
    state: present
  become: true

- name: Ensure Docker SDK for Python is present
  ansible.builtin.package:
    name: python3-docker
    state: present
  become: true

- name: Ensures docker dir exists
  ansible.builtin.file:
    path: "/etc/docker"
    state: directory
    mode: "0755"

- name: Configure Docker daemon
  ansible.builtin.template:
    src: daemon.json.j2
    dest: "/etc/docker/daemon.json"
    owner: root
    group: root
    mode: "0644"
  notify: Restart docker

- name: Start Docker service
  ansible.builtin.service:
    name: docker
    state: started
    enabled: true

- name: Log into registries
  community.docker.docker_login:
    registry: "{{ item.registry }}"
    username: "{{ item.username }}"
    password: "{{ item.password }}"
  loop: "{{ docker_auth }}"
  no_log: true

- name: Ensures the internal network exists
  community.docker.docker_network:
    name: internal
    driver: bridge

- name: Ensures the web network exists
  community.docker.docker_network:
    name: web
    driver: bridge
